name: CI
on: [push, pull_request]
jobs:
  build:
    name: test deno v2.x ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: true
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Setup deno
        uses: denoland/setup-deno@main
        with:
          deno-version: v2.x
      - name: Check formatting
        if: matrix.os == 'ubuntu-latest'
        run: deno fmt --check
      - name: Check linting
        if: matrix.os == 'ubuntu-latest'
        run: deno lint
      - name: Run tests
        run: deno test -A --coverage
      - name: Upload coverage
        if: |
          matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: coverage/lcov.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Release info
        if: |
          github.repository == 'udibo/http-error' &&
          matrix.os == 'ubuntu-latest' &&
          startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v1
        if: env.RELEASE_VERSION != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
